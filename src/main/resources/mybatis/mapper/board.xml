<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.springwebapp.dao.Ch13BoardDao">
	<insert id="insert" parameterType="Board">
	
		<!-- keyProperty : DTO 객체의 필드 이름 -->
		<!-- resultType : SQL문 결과 값의 타입형 -->
		<!-- order : 실행 우선순위 - BEFORE: 가장 먼저 실행 -->
		<selectKey keyProperty="bno" resultType="int" order="BEFORE">
			select seq_bno.nextval from dual
		</selectKey>
	
		insert into board (bno, btitle, bcontent, mid, bdate, bhitcount)
		values(#{bno}, #{btitle}, #{bcontent}, #{mid}, sysdate, 0)
	</insert>

	<select id="selectPageView" parameterType="Pager" resultType="Board">
		<![CDATA[
		select rnum, bno, btitle, mid, bdate, bhitcount, battachoname
		from (
		    select rownum as rnum , bno, btitle, mid, bdate, bhitcount, battachoname
		    from (
		        select bno, btitle, mid, bdate, bhitcount, battachoname
		        from board
		        order by bno desc
		    )
		    where rownum <= ${endRowNo}
		)
		where rnum >= ${startRowNo}
		]]>
	</select>
	
	<select id="count" resultType="int">
		select count(*) from board
	</select>
	
	
	<!-- DB 조회 결과, 한 행당 DTO 객체 1개를 만든다. -->
	<select id="selectAll" resultType="Board">
		select rnum, bno, btitle, mid, bdate, bhitcount, battachoname
		from board
		where bno=#{bno}
	</select>
	
	<select id="selectByBno" parameterType="int" resultType="Board">
		select bno, btitle, bcontent, mid, bdate, bhitcount, battachoname, battachsname, battachtype, battachdata
		from board
		where bno=${bno}
	</select>
	
	<!-- 실행을 위해 객체를 제공해야하면  parameterType 속성 사용-->
	<!-- 결과을 위해 객체를 받아야하면  resultType 속성 사용-->
	<update id="updateByBno" parameterType="Board">
		update board set btitle=#{btitle}, bcontent=#{bcontent} where bno=#{bno}
	</update>
	
	<delete id="deleteByBno" parameterType="int">
		delete from board where bno=#{bno}
	</delete>
</mapper>